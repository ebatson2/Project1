[
  {
    "objectID": "Project1.html",
    "href": "Project1.html",
    "title": "ST558 Project 1",
    "section": "",
    "text": "Our goal for this project is to write functions that will manipulate and process data sets that come from the Public Use Microdata Sample (PUMS) Census API. This API gives pseudo person-level data. We’ll create generic functions to automatically summarize and plot certain returned data."
  },
  {
    "objectID": "Project1.html#customizable-function-to-query-the-api",
    "href": "Project1.html#customizable-function-to-query-the-api",
    "title": "ST558 Project 1",
    "section": "Customizable function to query the API",
    "text": "Customizable function to query the API\nThe function named query_census_api has the following arguments: year, numer_vars, cat_vars, geog, and geog_values. It also uses the functions get_tibble and format_num_and_cat_vars created earlier to return our data request into a nice usable format.\n\nyear: this argument represents the “Year of survey” with the year 2022 as the default year and the input values must be between 2010 and 2022, except there is no data for the year 2020.\nnumer_vars: this argument represents the numeric variables to be returned with ‘AGEP’ and ‘PWGTP’ as defaults. The variable ‘PWGTP’ will always be returned. This input parameter has the following options for the user: AGEP, GASP, GRPIP, JWAP (time), JWDP (time), and JWMNP.\ncat_vars: this argument represents the categorical variables to be returned with ‘SEX’ as the default value. This input parameter has the following options for the user: FER, HHL, HISPEED, JWTRNS, SCH, SCHL, and SEX.\ngeog: this argument represents the geography level to be returned with ‘State’ as the default value. This input parameter has the following options for the user: All, Region, Division, and State\n\nTo allow the user to specify multiple years of survey data we wrote the R function query_with_years.\n\nquery_with_years &lt;- function(years=c(2022), ...){\n  \n  combined_tibble = tibble()\n  \n  for(i in seq_along(years)){\n    year_tibble &lt;- query_census_api(year=years[i], ...) |&gt;\n                      mutate(Year=years[i])\n    \n    combined_tibble &lt;- bind_rows(combined_tibble, year_tibble)\n  }\n  \n  return(combined_tibble)\n}\n\n#Testing our function\ndata_tibble &lt;- query_with_years(years=c(2019, 2021), numer_vars=c(\"AGEP\", \"GASP\"), cat_vars=c(\"FER\", \"HHL\"))\nhead(data_tibble)\n\n# A tibble: 6 × 7\n    Age Gas_Bill_Monthly PUMS_Weight State Recent_Birth Language  Year\n  &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt;        &lt;fct&gt;    &lt;dbl&gt;\n1    33                3          32 12    N/A          N/A       2019\n2    19                3          45 12    No           N/A       2019\n3    38                3          70 12    N/A          N/A       2019\n4    60                3          17 12    N/A          N/A       2019\n5    18                3         134 12    N/A          N/A       2019\n6    29                3          11 12    N/A          N/A       2019"
  },
  {
    "objectID": "Project1.html#writing-a-generic-function-for-summarizing",
    "href": "Project1.html#writing-a-generic-function-for-summarizing",
    "title": "ST558 Project 1",
    "section": "Writing a Generic Function for Summarizing",
    "text": "Writing a Generic Function for Summarizing\nNow that we have our data, lets try to do something with it. We created a function named summary.census that takes in three arguments: the tibble data set, the numeric variables (the default will summarize all the numeric variables other than PWGTP) and any categorical variables that that you want to summarize.\n\nsummary.census &lt;- function(data_tibble, numer_vars=c(\"All\"), cat_vars=c(\"All\")){\n\n  #if user doesn't specify numerical variables to summarize\n  if(\"All\" %in% numer_vars) {\n    \n    numer_vars &lt;- c()\n\n    for(i in seq_along(names(data_tibble))){\n      if (is.numeric(data_tibble[[i]]) & names(data_tibble)[i] != \"PUMS_Weight\") {\n          numer_vars &lt;- c(numer_vars, names(data_tibble)[i])\n      }\n    }\n  }\n  \n  #if user doesn't specify categorical variables to summarize\n  if(\"All\" %in% cat_vars){\n    \n    cat_vars &lt;- c()\n    \n    for(i in seq_along(names(data_tibble))){\n      if (!is.numeric(data_tibble[[i]])) {\n          cat_vars &lt;- c(cat_vars, names(data_tibble)[i])\n      }\n    }\n  }\n\n  # start a blank tibble for the numerical variable summary\n  numer_summary = tibble()\n  \n  # grab the weight data for numerical calculations\n  weight_col &lt;- data_tibble$PUMS_Weight\n  \n  # numerical var calculations\n  for (numer_var in numer_vars){\n    \n    #Find mean and sd of numeric variables\n    sample_mean &lt;- sum(data_tibble[, numer_var]*weight_col)/sum(weight_col)\n    sample_sd &lt;- sqrt(sum(data_tibble[, numer_var]**2*weight_col)/sum(weight_col)-sample_mean**2)\n\n    # add line to summary tibble\n    numer_summary &lt;- bind_rows(numer_summary, tibble(variable=numer_var, mean=sample_mean, sd=sample_sd))\n    \n  }\n\n  # start a blank list for the categorical variable summary\n  cat_summary = list()\n  \n  # get counts for each cat var\n  for (cat_var in cat_vars){\n    \n    var_count &lt;- data_tibble |&gt;\n      count(data_tibble[!!cat_var]) |&gt;\n      rename(count=n)\n    \n    # add tibble to summary list\n    cat_summary &lt;- c(cat_summary, list(var_count))\n  }\n  \n  # label the categorical variable count summaries\n  names(cat_summary) &lt;- cat_vars\n  \n  # return all summaries\n  return(list(numerical=numer_summary, categorical=cat_summary))\n}\n\n#test function \n# summary_test&lt;-summary.census(data_tibble,numer_vars=c(\"Age\"),cat_vars=c(\"Sex\"))\nsummary_test&lt;-summary.census(data_tibble)\n\nsummary_test$numerical\n\n# A tibble: 3 × 3\n  variable           mean    sd\n  &lt;chr&gt;             &lt;dbl&gt; &lt;dbl&gt;\n1 Age                42.1 23.9 \n2 Gas_Bill_Monthly   10.2 30.6 \n3 Year             2020.   1.00\n\nsummary_test$categorical\n\n$State\n# A tibble: 1 × 2\n  State  count\n  &lt;chr&gt;  &lt;int&gt;\n1 12    408177\n\n$Recent_Birth\n# A tibble: 3 × 2\n  Recent_Birth  count\n  &lt;fct&gt;         &lt;int&gt;\n1 N/A          328777\n2 No            75882\n3 Yes            3518\n\n$Language\n# A tibble: 6 × 2\n  Language                            count\n  &lt;fct&gt;                               &lt;int&gt;\n1 Asian and Pacific Island languages   9123\n2 English Only                       263765\n3 N/A                                 16697\n4 Other Indo-European languages       25764\n5 Other Language                       3740\n6 Spanish                             89088\n\n\nFinally, we created a basic graph function that takes in three arguments: the tibble data set, a numeric variables (the default variable is AGEP) and a categorical variable that you want to summarize (the default variable is SEX).\n\ngraph.census &lt;- function(data_tibble,num_var=\"AGEP\",cat_var=\"SEX\"){\n\n  #creating a basic boxplot\n  graph &lt;- ggplot(data_tibble,\n  aes(x = get(cat_var), y = get(num_var), weight = PUMS_Weight)) +\n  geom_boxplot()\n  return(graph)\n\n}"
  },
  {
    "objectID": "Project1.html#end-example-conclusion",
    "href": "Project1.html#end-example-conclusion",
    "title": "ST558 Project 1",
    "section": "End example (Conclusion)",
    "text": "End example (Conclusion)\nWe have created several functions (get_tibble,format_num_and_cat_vars,query_census_api,query_with_years,summary.census,graph.census) that will manipulate and process data sets that come from the Public Use Microdata Sample (PUMS) Census API. Lets show a couple simple example of using them. If we would like to look at only one year, we will use the query_census_api function and if we would like to look at multiple years we will use the query_with_years function. The first example will show how to use the query_census_api function to grab the 2018 Florida data which will be saved as an R object data_tibble_test and then I do basic means and standard deviations on all the variables, except for the weighting variable using the summary.census function and save that as a summary_test R object.\nThe variables I am going to call are:\n\n“AGEP”=Age\n“GRPIP”=Gross rent as a percentage of household income past 12 months\n“HISPEED”=Broadband (high speed) Internet service such as cable, fiber optic, or DSL service\ngeog=“State”\ngeog_values=“12”(“Florida/FL”)\n\n\n#Using query_census_api to look at one year \ndata_tibble_test &lt;- query_census_api(year=2018, numer_vars=c(\"AGEP\",\"GRPIP\"), cat_vars=c(\"SEX\",\"HISPEED\"), geog=\"State\", geog_values=c('12'))\n#print tibble\ndata_tibble_test\n\n# A tibble: 202,160 × 6\n     Age Rent_Percent_of_Income PUMS_Weight State Sex    Highspeed_Internet\n   &lt;dbl&gt;                  &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt;  &lt;fct&gt;             \n 1    15                      0          26 12    Male   N/A               \n 2    72                      0          24 12    Male   N/A               \n 3    37                      0          31 12    Male   N/A               \n 4    21                      0          76 12    Male   N/A               \n 5    18                      0          72 12    Male   N/A               \n 6    38                      0          62 12    Male   N/A               \n 7    35                      0          76 12    Female N/A               \n 8    24                      0           7 12    Male   N/A               \n 9    35                      0          41 12    Male   N/A               \n10    54                      0          40 12    Male   N/A               \n# ℹ 202,150 more rows\n\n#summary stats on all variables\nsummary_test&lt;-summary.census(data_tibble_test)\nsummary_test\n\n$numerical\n# A tibble: 2 × 3\n  variable                mean    sd\n  &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n1 Age                     41.7  23.9\n2 Rent_Percent_of_Income  12.5  23.4\n\n$categorical\n$categorical$State\n# A tibble: 1 × 2\n  State  count\n  &lt;chr&gt;  &lt;int&gt;\n1 12    202160\n\n$categorical$Sex\n# A tibble: 2 × 2\n  Sex     count\n  &lt;fct&gt;   &lt;int&gt;\n1 Female 103907\n2 Male    98253\n\n$categorical$Highspeed_Internet\n# A tibble: 3 × 2\n  Highspeed_Internet  count\n  &lt;fct&gt;               &lt;int&gt;\n1 N/A                 27164\n2 No                  25085\n3 Yes                149911\n\n#summary stats on selected variables\n# summary_test_selected&lt;-summary.census(data_tibble_test,numer_vars=c(\"GRPIP\"))\nsummary_test_selected&lt;-summary.census(data_tibble_test,numer_vars=c(\"Rent_Percent_of_Income\"))\nsummary_test_selected\n\n$numerical\n# A tibble: 1 × 3\n  variable                mean    sd\n  &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n1 Rent_Percent_of_Income  12.5  23.4\n\n$categorical\n$categorical$State\n# A tibble: 1 × 2\n  State  count\n  &lt;chr&gt;  &lt;int&gt;\n1 12    202160\n\n$categorical$Sex\n# A tibble: 2 × 2\n  Sex     count\n  &lt;fct&gt;   &lt;int&gt;\n1 Female 103907\n2 Male    98253\n\n$categorical$Highspeed_Internet\n# A tibble: 3 × 2\n  Highspeed_Internet  count\n  &lt;fct&gt;               &lt;int&gt;\n1 N/A                 27164\n2 No                  25085\n3 Yes                149911\n\n\nThe second example, I am going to look use the query_with_years function to look at the same variables as above, but for Alaska, which is “ST=2”. You can find the different “ST” codes here.\n\n#Using query_census_api to look at 2021, 2022  \ndata_tibble_test_yr &lt;- query_with_years(years=c(2021,2022), numer_vars=c(\"AGEP\",\"GRPIP\"), cat_vars=c(\"SEX\",\"HISPEED\"), geog=\"State\", geog_values=c('2'))\ndata_tibble_test_yr\n\n# A tibble: 13,383 × 7\n     Age Rent_Percent_of_Income PUMS_Weight State Sex   Highspeed_Internet  Year\n   &lt;dbl&gt;                  &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt; &lt;fct&gt;              &lt;dbl&gt;\n 1    40                      0          18 02    Fema… Yes                 2021\n 2    42                      0          19 02    Male  Yes                 2021\n 3     5                      0          16 02    Male  Yes                 2021\n 4     2                      0          17 02    Male  Yes                 2021\n 5    41                      0         503 02    Fema… Yes                 2021\n 6    63                      0          43 02    Male  N/A                 2021\n 7    54                      0          15 02    Male  N/A                 2021\n 8    54                      0          14 02    Male  N/A                 2021\n 9    64                      0          44 02    Fema… N/A                 2021\n10    29                      0          49 02    Male  N/A                 2021\n# ℹ 13,373 more rows\n\n#summary stats on all variables\nsummary_test_yr&lt;-summary.census(data_tibble_test_yr)\nsummary_test_yr\n\n$numerical\n# A tibble: 3 × 3\n  variable                  mean     sd\n  &lt;chr&gt;                    &lt;dbl&gt;  &lt;dbl&gt;\n1 Age                      36.8  22.2  \n2 Rent_Percent_of_Income    8.81 20.0  \n3 Year                   2022.    0.500\n\n$categorical\n$categorical$State\n# A tibble: 1 × 2\n  State count\n  &lt;chr&gt; &lt;int&gt;\n1 02    13383\n\n$categorical$Sex\n# A tibble: 2 × 2\n  Sex    count\n  &lt;fct&gt;  &lt;int&gt;\n1 Female  6289\n2 Male    7094\n\n$categorical$Highspeed_Internet\n# A tibble: 3 × 2\n  Highspeed_Internet count\n  &lt;fct&gt;              &lt;int&gt;\n1 N/A                 2103\n2 No                  3407\n3 Yes                 7873\n\n#summary stats on selected variables\n# summary_test_yr_selected&lt;-summary.census(data_tibble_test_yr,numer_vars=c(\"GRPIP\"))\nsummary_test_yr_selected&lt;-summary.census(data_tibble_test_yr,numer_vars=c(\"Rent_Percent_of_Income\"))\nsummary_test_yr_selected\n\n$numerical\n# A tibble: 1 × 3\n  variable                mean    sd\n  &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n1 Rent_Percent_of_Income  8.81  20.0\n\n$categorical\n$categorical$State\n# A tibble: 1 × 2\n  State count\n  &lt;chr&gt; &lt;int&gt;\n1 02    13383\n\n$categorical$Sex\n# A tibble: 2 × 2\n  Sex    count\n  &lt;fct&gt;  &lt;int&gt;\n1 Female  6289\n2 Male    7094\n\n$categorical$Highspeed_Internet\n# A tibble: 3 × 2\n  Highspeed_Internet count\n  &lt;fct&gt;              &lt;int&gt;\n1 N/A                 2103\n2 No                  3407\n3 Yes                 7873"
  }
]